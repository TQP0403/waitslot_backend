name: Waitslot App Auto Build & Deploy

on:
  push:
    branches:
      - main
      - dev

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: NPM run build
        run: |
          npm ci
          npm run build
      # Add support for more platforms with QEMU (optional)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - if: github.ref == 'refs/heads/dev'
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          target: dev
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ vars.APP_NAME }}:latest

      - if: github.ref == 'refs/heads/main'
        name: Build and push Prod
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          target: prod
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ vars.PROD_APP_NAME }}:latest

  Deploy-Dev:
    name: Deploy to EC2 DEV
    runs-on: ubuntu-latest
    needs: Build
    if: github.ref == 'refs/heads/dev'

    steps:
      - name: Deploy
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.SSH_HOST }}
          USER: ${{ secrets.SSH_USER }}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} '

          # Now we have got the access of EC2 and we will start the deploy .
          bash backend-app.bash
          '

  Deploy-Prod:
    name: Deploy to EC2 PROD
    runs-on: ubuntu-latest
    needs: Build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.SSH_HOST }}
          USER: ${{ secrets.SSH_USER }}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} '

          # Now we have got the access of EC2 and we will start the deploy .
          bash prod-backend-app.bash
          '
